<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <UserSecretsId>2cc8f156-9658-49b8-92f6-cc1760f7e8c7</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="10.1.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.10" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.9" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.9" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.2.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Swashbuckle.AspNetCore" Version="5.6.3" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\constants\theMovieDbUrls.ts" />
    <None Remove="ClientApp\src\models\cinema.ts" />
    <None Remove="ClientApp\src\models\genre.ts" />
    <None Remove="ClientApp\src\models\movie.ts" />
    <None Remove="ClientApp\src\models\purchase.ts" />
    <None Remove="ClientApp\src\models\room.ts" />
    <None Remove="ClientApp\src\models\show.ts" />
    <None Remove="ClientApp\src\models\ticket.ts" />
    <None Remove="ClientApp\src\services\ShowService.ts" />
    <None Remove="ClientApp\src\views\pages\Landing\index.tsx" />
    <None Remove="ClientApp\src\views\pages\Landing\Landing.tsx" />
    <None Remove="ClientApp\src\views\pages\MovieDetails\index.tsx" />
    <None Remove="ClientApp\src\views\pages\MovieDetails\MovieDetails.tsx" />
    <None Remove="ClientApp\src\views\shared\MovieCard\index.tsx" />
    <None Remove="ClientApp\src\views\shared\MovieCard\MovieCard.tsx" />
    <None Remove="ClientApp\src\views\shared\MovieListings\index.tsx" />
    <None Remove="ClientApp\src\views\shared\MovieListings\MovieListings.tsx" />
    <None Remove="ClientApp\src\views\shared\Navbar\index.tsx" />
    <None Remove="ClientApp\src\views\shared\Navbar\Navbar.tsx" />
    <None Remove="ClientApp\src\views\shared\ProtectedRoute\PrivateRoute.tsx" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\MP.Core\MP.Core.csproj" />
    <ProjectReference Include="..\MP.DataAccess\MP.DataAccess.csproj" />
    <ProjectReference Include="..\MP.Web.Dtos\MP.Web.Dtos.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Authorization\" />
    <Folder Include="ClientApp\src\utils\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**; $(SpaRoot)build-ssr\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptTarget>ES5</TypeScriptTarget>
    <TypeScriptJSXEmit>React</TypeScriptJSXEmit>
    <TypeScriptModuleKind />
    <TypeScriptCompileOnSaveEnabled>False</TypeScriptCompileOnSaveEnabled>
    <TypeScriptNoImplicitAny>False</TypeScriptNoImplicitAny>
    <TypeScriptRemoveComments>False</TypeScriptRemoveComments>
    <TypeScriptOutFile />
    <TypeScriptOutDir />
    <TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
    <TypeScriptNoEmitOnError>True</TypeScriptNoEmitOnError>
    <TypeScriptSourceMap>True</TypeScriptSourceMap>
    <TypeScriptMapRoot />
    <TypeScriptSourceRoot />
  </PropertyGroup>

</Project>
